# This is a general manifest template for running Bash and core utility programs,
# including ls, cat, cp, date, and rm.
#
# This manifest was prepared and tested on Ubuntu 16.04.

# The executable to load in Graphene. We replace EXECPATH and ARGV0_OVERRIDE for
# each program that a manifest is generated for.
loader.exec = file:$(EXECPATH)
loader.argv0_override = $(ARGV0_OVERRIDE)

loader.syscall_symbol = syscalldb
sgx.file_check_policy = allow_all_but_log 
sgx.allow_file_creation = 1

# Read application arguments directly from the command line. Don't use this on production!
loader.insecure__use_cmdline_argv = 1

# Graphene environment, including the path of the library OS and the debug
# option (inline/none).
loader.preload = file:$(GRAPHENEDIR)/Runtime/libsysdb.so
loader.debug_type = $(GRAPHENEDEBUG)

# Environment variables
#loader.env.LD_LIBRARY_PATH = /lib:$(ARCH_LIBDIR)
loader.env.LD_LIBRARY_PATH = /lib:/lib/x86_64-linux-gnu:/usr/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-11-openjdk-amd64/lib/jli
loader.env.SPARK_HOME = file:scripts/spark-2.4.3-bin-hadoop2.7
loader.env.SPARK_LOCAL_IP = 10.239.166.29
loader.env.SPARK_CONF_DIR = file:scripts/spark-2.4.3-bin-hadoop2.7/conf
loader.env.SPARK_LOG_DIR = file:scripts/spark-2.4.3-bin-hadoop2.7/logs
loader.env.SPARK_WORKER_MEMORY = 10G

# Mounted FSes. The following "chroot" FSes mount a part of the host FS into the
# guest. Other parts of the host FS will not be available in the guest.

# Default glibc files, mounted from the Runtime directory in GRAPHENEDIR.
fs.mount.lib.type = chroot
fs.mount.lib.path = /lib
fs.mount.lib.uri = file:$(GRAPHENEDIR)/Runtime

# Host-level libraries (e.g., /lib/x86_64-linux-gnu) required by Bash
fs.mount.lib2.type = chroot
fs.mount.lib2.path = $(ARCH_LIBDIR)
fs.mount.lib2.uri = file:$(ARCH_LIBDIR)

# Mount /bin
fs.mount.bin.type = chroot
fs.mount.bin.path = $(EXECDIR)
fs.mount.bin.uri = file:$(EXECDIR)

# Host-level directory (/usr) required by the Python executable
fs.mount.usr.type = chroot
fs.mount.usr.path = /usr
fs.mount.usr.uri = file:/usr

fs.mount.tmp.type = chroot
fs.mount.tmp.path = /tmp
fs.mount.tmp.uri = file:/tmp

fs.mount.etc2.type = chroot
fs.mount.etc2.path = /etc
fs.mount.etc2.uri = file:/etc

fs.mount.proc.type = chroot
fs.mount.proc.path = /proc
fs.mount.proc.uri = file:/proc

# SGX general options

net.allow_bind.sparkwebport = :8080
#net.allow_bind.masterrest = :6066
net.allow_bind.sparkport = :7077
net.allow_bind.appport = :4040
net.allow_bind.sparkslave = :8081
#blob.server.port = :8080

# Set the virtual memory size of the SGX enclave. For SGX v1, the enclave
# size must be specified during signing. If the program needs more virtual
# memory than the enclave size, Graphene will not be able to allocate it.
#sys.brk.max_size = 32M
#sys.stack.size = 4M

sgx.enclave_size = 32G

# Set the maximum number of enclave threads. For SGX v1, the number of enclave
# TCSes must be specified during signing, so the application cannot use more
# threads than the number of TCSes. Note that Graphene also creates an internal
# thread for handling inter-process communication (IPC), and potentially another
# thread for asynchronous events. Therefore, the actual number of threads that
# the application can create is (sgx.thread_num - 2).
sgx.thread_num = 512

# SGX trusted libraries

# Glibc libraries
sgx.trusted_files.ld = file:$(GRAPHENEDIR)/Runtime/ld-linux-x86-64.so.2
sgx.trusted_files.libc = file:$(GRAPHENEDIR)/Runtime/libc.so.6
sgx.trusted_files.libm = file:$(GRAPHENEDIR)/Runtime/libm.so.6
sgx.trusted_files.libdl = file:$(GRAPHENEDIR)/Runtime/libdl.so.2
sgx.trusted_files.librt = file:$(GRAPHENEDIR)/Runtime/librt.so.1
sgx.trusted_files.libutil = file:$(GRAPHENEDIR)/Runtime/libutil.so.1
sgx.trusted_files.libpthread = file:$(GRAPHENEDIR)/Runtime/libpthread.so.0

# Name Service Switch (NSS) libraries (Glibc dependencies)
sgx.trusted_files.libnsscompat = file:$(ARCH_LIBDIR)/libnss_compat.so.2
sgx.trusted_files.libnssfiles = file:$(ARCH_LIBDIR)/libnss_files.so.2
sgx.trusted_files.libnssnis = file:$(ARCH_LIBDIR)/libnss_nis.so.2

# Additional libs opened by Bash at runtime
sgx.trusted_files.libselinux1 = file:$(ARCH_LIBDIR)/libselinux.so.1
sgx.trusted_files.libpcre = file:$(ARCH_LIBDIR)/libpcre.so.3
sgx.trusted_files.libacl = file:$(ARCH_LIBDIR)/libacl.so.1
sgx.trusted_files.libattr = file:$(ARCH_LIBDIR)/libattr.so.1


# Name Service Switch (NSS) and getaddrinfo(3) configuration files
sgx.allowed_files.nsswitch  = file:/etc/nsswitch.conf
sgx.allowed_files.ethers    = file:/etc/ethers
sgx.allowed_files.hosts     = file:/etc/hosts
sgx.allowed_files.group     = file:/etc/group
sgx.allowed_files.passwd    = file:/etc/passwd
sgx.allowed_files.gaiconf   = file:/etc/gai.conf
sgx.allowed_files.hostconf  = file:/etc/host.conf
sgx.allowed_files.hostname  = file:/etc/hostname
sgx.allowed_files.resolv    = file:/etc/resolv.conf


#MORE
#sgx.trusted_files.libjli = file:/usr/lib/jvm/java-11-openjdk-amd64/lib/jli/libjli.so
#sgx.trusted_files.libjava = file:$(ARCH_LIBDIR)/libjava.so

# Other required libraries
$(TRUSTED_LIBS)

# Signatures of child enclaves
$(TRUSTED_CHILDREN)

sgx.allowed_files.scripts = file:scripts
sgx.allowed_files.tmp = file:/tmp
sgx.allowed_files.procdir = file:/proc
sgx.allowed_files.spark = file:scripts/spark-2.4.3-bin-hadoop2.7
sgx.allowed_files.sparkconf = file:scripts/spark-2.4.3-bin-hadoop2.7/conf
sgx.allowed_files.sparklog = file:scripts/spark-2.4.3-bin-hadoop2.7/logs
sgx.allowed_files.sparkwork = file:scripts/spark-2.4.3-bin-hadoop2.7/work
